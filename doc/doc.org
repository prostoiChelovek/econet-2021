#+TITLE: Инженерная книга
#+SUBTITLE: Команда с остроумным названием
#+AUTHOR: Андрей Люнгрин, Иван Наумов, Тимофей Меньшиков
#+DATE: 22 Января 2022

#+latex_compiler: xelatex

#+latex_header: \usepackage[utf8x]{inputenc}
#+latex_header: \usepackage[T2A]{fontenc}

#+latex_header: \usepackage[russian, english]{babel}
#+latex_header: \babelfont{rm}{Droid Serif}
#+latex_header: \babelfont{sf}{Droid Sans}

#+LATEX_HEADER: \let\oldsection\section
#+LATEX_HEADER: \renewcommand\section{\pagebreak\oldsection}

* Команда
** Андрей Люнгрин
#+attr_latex: :width 100
[[./images/andrey.jpeg]]

*Специализация*: программирование микроконтроллеров
** Иван Наумов
#+attr_latex: :width 100
[[./images/ivan.jpg]]

*Специализация*: 3d-моделирование, сборка
** Тимофей Меньшиков
*Специализация*: компьютерное зрение
* Общее описание робота
#+attr_latex: :width 400
[[./images/robot-front-view.png]]

Робот представляеть из себя колёсную платформу с подъёмной клешнёй спереди и тремя ящиками сзади. Размеры: ширина - 500 мм, высота - 550 мм, глубина - 496 мм.
Все структурные элементы кормуса выполнены из фанеры толщиной 6 мм. Для получения деталей использовалась технология лазерной резки. Также, некоторые элементы робота были произведены с использованием технологии трёхмерной печати, т.к. изготовление их из фанеры нецелесообразно. Такая комбинация позволяет максимально ускорить процесс производства корпуса, хотя и влечёт за собой усложнение процесса моделирование, за счёт необходимости добавления элементов стыковки деталей.
* Использованные САПР
- Основная работа по моделированию была проделана во /Fusion 360/ - современная параметрическая САПР от компании /Autodesk/.
- Небольшая часть деталей была создана во /FreeCAD/ - параметрическая САПР общего назначения с открытым исходным кодом.
- Также, для создания некоторых простых деталей использовался /OpenSCAD/ - открытая САПР для параметрического (не визуального) создания твердотельных трёхмерных объектов.
* Привод
Перемешение робота обеспечивается за счёт двух двигателей постоянного тока с редукторами. Нами были выбраны двигатели /TETRIX® MAX TorqueNADO® Motor/, из-за их высокой тяги и скорости. Другим плюсом данного варианта является наличие встроенного квадратурного инкременатльного энкодера, что существенно упрощает его интеграцию в систему.

Двигатели подключены к колёсам диаметром 76 мм. Для снятия нагрузки с вала дивгателя, колёса опираются с другой стороны на подшипник. Колёса расположены внутри платформы робота, на расстоянии 17 мм. Это необходимо для увеличения скорости поворота.

В задней части платформы закреплены две шариковые опоры.
* Логика работы
Робот был спроектирован с целью минимизации количества поездок до точки сброса. Из этого следует решение хранить собранный мусор внутри робота, что, при идеальных обстоятельствах, сводит количество перемещений до точки сброса до одного - для финальной выгрузки.

Для достижения данной цели, в роботе предусмотрены три ящика. Конструкция ящика представляет из себя три боковых стенки, и дно, расположенное под наклоном. Все три ящика закрыты сзади одной общей стенкой, которая не даёт собранному мусору вывалиться. Каждый ящика оснащён подъёмной системой, которая позволяет поднять ящик выше задней стенки. Таким образом, ящик окажется открыт, и собранный мусор, за счёт скошенного дна упадёт из ящика.
Ящики спроектированы так, что любой тип мусора может поместиться в подходящий ящик, вне зависимости от его ориентации.

Для забора мусора, в передней части робота расположен захват. Его максимальный размах - 370 мм, что существенно упрощает логику захвата за счёт того, что это даёт нам возможность захватить любой предмет, вне зависимости от его ориентации, без какой-либо подстройки. Для обеспечения загрузки захваченных предметов в ящик, захват прикреплён к механизму, который позволяет поднять его выше уровня ящиков, а после этого - перевернуть его так, что предмет окажется над ящиком.

Сортировка мусора по ящикам осуществляется за счёт перемещения всей сборки ящиков в стороны, так, что нужный ящик оказывается по центру, т.е. в зоне сброса предмета захватом.
* Кинематика
Подъём ящикаов и захвата реализован за счёт линейных направляющих и ходового винта, который приводится в движение двигателем постоянного тока.

Перемещение ящиков в стороны реализовано с использованием зубчатой рейки и шестерни, которая также приводится в движение двигателем постоянного тока.
* Электронника
Всю электронную часть робота можно разделить на /силовую/ и /управляющую/.

/Силовой/ блок, как может быть понятно из названия, отвечает за управление двигателями. Он включает в себя 5 плат драйверов двигателей постоянного тока, на базе чипа L298N. Данный выбор обусловлен лишь широкой доступностью таких плат, и не является оптимальным из-за низкой его энерго-эффективности (и следовательно - высокого тепловыделения), а также наличия более совершенных и компактных аналогов.

/Управляющий/ блок влючает в себя одноплатный компьютер /Raspberry Pi 3B/ и отладочную плату /STM32 Nucleo/ на базе микроконтроллера серии /F401RE/.
/Raspberry Pi/ отвечает за обработку данных с камеры (компьютерное зрение), а также планирование маршрута и принятие других высокоуровневых решений.
Микроконтроллер отвечает за получение сигналов от датчиков (концевые выключатели и энкодеры двигателей) и генерацию управляющих сигналов для двигателей.
Такое разделение необходимо потому, что /Raspberry Pi/ не преспособлен для точной обработки (относительно) высокочастостных входных сигналов, и не имеет средств генерации управляющих сигналов правильной формы.
Связь между контроллерами осуществляется по виртуальному последовательному порту, через USB соединение.

Силовая часть питается от /NiMH/ аккумулятора на 12V/3Ah. Управляющая часть питается от отдельного USB PowerBank'а.
* Программная часть
** Организация
Весь код для проекта, а также, некоторые исходники 3D-моделей находятся в /git-репозитории/, размещённом на /GitHub/ по аддрессу [[https://github.com/prostoiChelovek/econet-2021]].
** Микроконтроллер
ПО для микроконтроллера было написано на /Rust/ - компилируемый язык программирования общего назначения, одной из главных особенностей которого является гарантия безопасности памяти, за счёт встроенного в компилятор механизма проверки ссылок (/Borrow-checker/).
Также, для упрощения разработки, используется фреймворк /RTIC/ - /Real-Time Interrupt-driven Concurrency/. Он предоставляет возможность создавать конкурентные задачи, планировать их выполнение, и безопасно распределять общие ресурсы между ними.
*** Управление двигателями
Двигатели управляются с помощью двух /ПИД-регуляторов/. Первый отвечает за удержание заданной скорости. Его вход - реальная скорость, полученная с энкодера (см/с); выход - скорость двигателя (% заполнения ШИМ). Как вы могли заметить, размерности входа и выхода не совпадают. Для избежания данной проблемы, входное значение скорости нормализуется в диапазон от 0% до 100%, где 100% - эксперементально выявленная максимальная скорость вращения двигателя.

Второй регулятор отвечает за удержание позиции. На вход он получает текущую позицию колеса, котора также вычисляется из данных энкодера (см); на выходе мы получаем управляющее воздействие на скорость (скорость - см/с). Для согласования размерностей, входное значение нормализуется в диапазон от -1 до 1. Управляющее воздействие прибавляется к нормализованному значению текущей скорости, и данная сумма, после денормализации, устанавливается в качестве новой целевой скорости двигателя.
